"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def get_referral_kb(has_bonus: bool = False) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    
    Args:
        has_bonus: –ï—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    builder.button(
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤",
        callback_data="referral_stats"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏)
    if has_bonus:
        builder.button(
            text="üéÅ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –±–æ–Ω—É—Å",
            callback_data="apply_referral_bonus"
        )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    builder.button(
        text="üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π",
        callback_data="share_referral"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.button(
        text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="back_to_main"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_referral_stats_kb() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç–∫—Ä–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —ç–∫—Ä–∞–Ω—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_referral"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    builder.button(
        text="üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π",
        callback_data="share_referral"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.button(
        text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="back_to_main"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_referral_apply_bonus_kb(max_days: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞
    
    Args:
        max_days: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –¥–Ω–µ–π
    """
    builder = InlineKeyboardBuilder()
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–Ω–µ–π
    days_options = [1, 3, 5, 10, max_days]
    
    # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–Ω–µ–π
    days_options = [days for days in days_options if days <= max_days]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
    unique_days = set(days_options)
    for days in sorted(unique_days):
        builder.button(
            text=f"{days} {_days_text(days)}",
            callback_data=f"apply_days:{days}"
        )
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    builder.button(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="back_to_referral"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 2 –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–Ω–µ–π, –∏ 1 –¥–ª—è –æ—Ç–º–µ–Ω—ã
    if len(unique_days) > 1:
        builder.adjust(2, 2, 1)
    else:
        builder.adjust(1)
    
    return builder.as_markup()


def _days_text(days: int) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–¥–µ–Ω—å' –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∞
    
    Args:
        days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
        
    Returns:
        –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–¥–µ–Ω—å'
    """
    if days % 10 == 1 and days % 100 != 11:
        return "–¥–µ–Ω—å"
    elif 2 <= days % 10 <= 4 and (days % 100 < 10 or days % 100 >= 20):
        return "–¥–Ω—è"
    else:
        return "–¥–Ω–µ–π"


def get_referral_keyboard(has_bonus_days: bool = False) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    buttons = [
        [
            InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="referral:stats")
        ],
        [
            InlineKeyboardButton(text="üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", callback_data="referral:share")
        ]
    ]
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    if has_bonus_days:
        buttons.insert(1, [
            InlineKeyboardButton(text="üéÅ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–Ω—É—Å", callback_data="referral:apply_bonus")
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    buttons.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main:menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_bonus_days_keyboard(max_days: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π"""
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ä–∞–∑–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–Ω–µ–π
    days_options = [1, 3, 5, 10]
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –æ–ø—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–Ω–µ–π
    available_options = [days for days in days_options if days <= max_days]
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –¥–Ω–µ–π, —á–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ü–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–Ω–∏
    if max_days > max(days_options, default=0):
        available_options.append(max_days)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    for i in range(0, len(available_options), 2):
        row = []
        for days in available_options[i:i+2]:
            row.append(InlineKeyboardButton(
                text=f"{days} {_days_text(days)}",
                callback_data=f"referral:apply_days:{days}"
            ))
        builder.row(*row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="referral:back")
    )
    
    return builder.as_markup()


def get_referrer_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É"""
    buttons = [
        [
            InlineKeyboardButton(text="üéÅ –°—Ç–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º", callback_data="referral:join")
        ],
        [
            InlineKeyboardButton(text="‚ùì –£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="referral:info")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main:menu")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons) 