"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ –∏ –∫–ª–∞—Å—Ç–µ—Ä–∞–º–∏
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List

from ..models.cluster import VPNCluster, VPNServer


def get_cluster_selection_kb(clusters: List[VPNCluster]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞
    
    Args:
        clusters: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞
    for cluster in clusters:
        builder.button(
            text=f"{cluster.name}",
            callback_data=f"cluster:{cluster.id}"
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_main"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_server_selection_kb(servers: List[VPNServer]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
    
    Args:
        servers: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    for server in servers:
        builder.button(
            text=f"{server.name} ({server.country})",
            callback_data=f"server:{server.id}"
        )
    
    # –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∫–ª–∞—Å—Ç–µ—Ä–æ–≤
    if servers and len(servers) > 0:
        cluster_id = servers[0].cluster_id
        builder.button(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
            callback_data=f"cluster:{cluster_id}"
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.button(
        text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="back_to_main"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_admin_server_kb(server: VPNServer) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    
    Args:
        server: –û–±—ä–µ–∫—Ç —Å–µ—Ä–≤–µ—Ä–∞
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    status_text = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if server.is_active else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
    status_action = "disable" if server.is_active else "enable"
    
    builder.button(
        text=status_text,
        callback_data=f"admin_server:{status_action}:{server.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    builder.button(
        text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        callback_data=f"admin_server:edit:{server.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    builder.button(
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        callback_data=f"admin_server:stats:{server.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    builder.button(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data=f"admin_server:delete:{server.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data=f"admin_cluster:{server.cluster_id}"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_admin_cluster_kb(cluster: VPNCluster) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–æ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    
    Args:
        cluster: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Ç–µ—Ä–∞
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–æ–º
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
    builder.button(
        text="üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–µ—Ä–≤–µ—Ä–æ–≤",
        callback_data=f"admin_cluster:view_servers:{cluster.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    builder.button(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä",
        callback_data=f"admin_cluster:add_server:{cluster.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
    status_text = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if cluster.is_active else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
    status_action = "disable" if cluster.is_active else "enable"
    
    builder.button(
        text=status_text,
        callback_data=f"admin_cluster:{status_action}:{cluster.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
    builder.button(
        text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        callback_data=f"admin_cluster:edit:{cluster.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
    builder.button(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data=f"admin_cluster:delete:{cluster.id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data="admin:clusters"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_admin_clusters_list_kb(clusters: List[VPNCluster]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–ª–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    
    Args:
        clusters: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞
    for cluster in clusters:
        status_emoji = "üü¢" if cluster.is_active else "üî¥"
        builder.button(
            text=f"{status_emoji} {cluster.name}",
            callback_data=f"admin_cluster:view:{cluster.id}"
        )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞
    builder.button(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∞—Å—Ç–µ—Ä",
        callback_data="admin_cluster:add"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data="admin:menu"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_admin_servers_list_kb(servers: List[VPNServer], cluster_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    
    Args:
        servers: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤
        cluster_id: ID –∫–ª–∞—Å—Ç–µ—Ä–∞
        
    Returns:
        –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    for server in servers:
        status_emoji = "üü¢" if server.is_active else "üî¥"
        builder.button(
            text=f"{status_emoji} {server.name} ({server.country})",
            callback_data=f"admin_server:view:{server.id}"
        )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    builder.button(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä",
        callback_data=f"admin_cluster:add_server:{cluster_id}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data=f"admin_cluster:view:{cluster_id}"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –≤ 1 –∫–Ω–æ–ø–∫—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_server_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞–º–∏"""
    buttons = [
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä", callback_data="server:add"),
            InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤", callback_data="server:list")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin:menu")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_server_edit_keyboard(server_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data=f"server:edit:{server_id}"
            ),
            InlineKeyboardButton(
                text="‚ùå –£–¥–∞–ª–∏—Ç—å",
                callback_data=f"server:delete:{server_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                callback_data=f"server:stats:{server_id}"
            ),
            InlineKeyboardButton(
                text="üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å",
                callback_data=f"server:restart:{server_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥",
                callback_data="server:list"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons) 